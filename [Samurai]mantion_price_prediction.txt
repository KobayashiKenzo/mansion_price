{"cells":[{"cell_type":"markdown","metadata":{"id":"Jvzp1lvQpRgU"},"source":["不動産価格予測"]},{"cell_type":"code","execution_count":55,"metadata":{"id":"mTfOenlQpgwk","colab":{"base_uri":"https://localhost:8080/"},"outputId":"46294d57-1e00-4dfb-ba06-74d869240c43","executionInfo":{"status":"ok","timestamp":1727944712545,"user_tz":-540,"elapsed":2213,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":56,"metadata":{"id":"_IIvHkOUAmo3","executionInfo":{"status":"ok","timestamp":1727944716011,"user_tz":-540,"elapsed":3468,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["!pip install optuna japanize-matplotlib > /dev/null"]},{"cell_type":"code","execution_count":57,"metadata":{"id":"nwMuSLsAASYD","executionInfo":{"status":"ok","timestamp":1727944716012,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["# ご自身のパスを設定\n","YOUR_PATH = \"/content/drive/MyDrive/cpt-house-2024au\""]},{"cell_type":"code","execution_count":58,"metadata":{"id":"dYaD5zaDAP_R","colab":{"base_uri":"https://localhost:8080/"},"outputId":"997e15f2-2897-4da5-c863-7832da76faea","executionInfo":{"status":"ok","timestamp":1727944716012,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/cpt-house-2024au\n"]}],"source":["cd {YOUR_PATH}"]},{"cell_type":"code","execution_count":59,"metadata":{"id":"v1RMD76PpRgZ","executionInfo":{"status":"ok","timestamp":1727944716012,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["import re\n","\n","import japanize_matplotlib\n","import lightgbm as lgb\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import optuna\n","import pandas as pd\n","import seaborn as sns\n","sns.set(font=\"IPAexGothic\")\n","\n","from glob import glob\n","from functools import partial\n","from itertools import product\n","from sklearn.metrics import mean_absolute_error\n","from sklearn.model_selection import KFold\n","from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import FunctionTransformer, LabelEncoder, OrdinalEncoder"]},{"cell_type":"markdown","metadata":{"id":"VOYXRgYxP3HQ"},"source":["## 実行環境の情報"]},{"cell_type":"markdown","metadata":{"id":"nvRC28_00lWT"},"source":["dataディレクトリ配下に以下のようにデータを格納しているとする\n","\n","├─ input<br>\n","│   ├─ data_explanation.xlsx<br>\n","│   ├─ sample_submission.csv<br>\n","│   ├─ test.csv<br>\n","│   └─ train<br>\n","│       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├─ 01.csv<br>\n","│       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├─ 02.csv<br>\n","│       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├─ 03.csv<br>\n","│       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├─ ...<br>\n","│       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└─ 47.csv<br>\n","└─ output\n"]},{"cell_type":"markdown","metadata":{"id":"OOLSl-WbUB8F"},"source":["メモリサイズ(GB)"]},{"cell_type":"code","execution_count":60,"metadata":{"id":"dXGn86LZQUr8","colab":{"base_uri":"https://localhost:8080/"},"outputId":"daaf9009-67f4-4d36-c5f4-ef4e21051a96","executionInfo":{"status":"ok","timestamp":1727944716012,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["12.6748\n"]}],"source":["!cat /proc/meminfo | awk '($1==\"MemTotal:\") {print $2/1048576}'"]},{"cell_type":"markdown","metadata":{"id":"J2uoGnN5UGDH"},"source":["Pythonバージョン"]},{"cell_type":"code","execution_count":61,"metadata":{"id":"lE91M0l5SbUx","colab":{"base_uri":"https://localhost:8080/"},"outputId":"10f1060e-066e-4147-8a36-8dad9ed85f5a","executionInfo":{"status":"ok","timestamp":1727944716012,"user_tz":-540,"elapsed":4,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Python 3.10.12\n"]}],"source":["!python -V"]},{"cell_type":"markdown","metadata":{"id":"3qH7rJiBUIOI"},"source":["Pythonライブラリ情報"]},{"cell_type":"code","execution_count":62,"metadata":{"id":"5mRpQMIdRpIL","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7307a37f-b9e1-4a57-a7d6-69b4c2a3fbb4","executionInfo":{"status":"ok","timestamp":1727944717600,"user_tz":-540,"elapsed":1591,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["absl-py==1.4.0\n","accelerate==0.34.2\n","aiohappyeyeballs==2.4.2\n","aiohttp==3.10.8\n","aiosignal==1.3.1\n","alabaster==0.7.16\n","albucore==0.0.16\n","albumentations==1.4.15\n","alembic==1.13.3\n","altair==4.2.2\n","annotated-types==0.7.0\n","anyio==3.7.1\n","argon2-cffi==23.1.0\n","argon2-cffi-bindings==21.2.0\n","array_record==0.5.1\n","arviz==0.19.0\n","astropy==6.1.4\n","astropy-iers-data==0.2024.9.30.0.32.59\n","astunparse==1.6.3\n","async-timeout==4.0.3\n","atpublic==4.1.0\n","attrs==24.2.0\n","audioread==3.0.1\n","autograd==1.7.0\n","babel==2.16.0\n","backcall==0.2.0\n","beautifulsoup4==4.12.3\n","bigframes==1.19.0\n","bigquery-magics==0.2.0\n","bleach==6.1.0\n","blinker==1.4\n","blis==0.7.11\n","blosc2==2.0.0\n","bokeh==3.4.3\n","Bottleneck==1.4.0\n","bqplot==0.12.43\n","branca==0.8.0\n","build==1.2.2\n","CacheControl==0.14.0\n","cachetools==5.5.0\n","catalogue==2.0.10\n","certifi==2024.8.30\n","cffi==1.17.1\n","chardet==5.2.0\n","charset-normalizer==3.3.2\n","chex==0.1.87\n","clarabel==0.9.0\n","click==8.1.7\n","cloudpathlib==0.19.0\n","cloudpickle==2.2.1\n","cmake==3.30.4\n","cmdstanpy==1.2.4\n","colorcet==3.1.0\n","colorlog==6.8.2\n","colorlover==0.3.0\n","colour==0.1.5\n","community==1.0.0b1\n","confection==0.1.5\n","cons==0.4.6\n","contextlib2==21.6.0\n","contourpy==1.3.0\n","cryptography==43.0.1\n","cuda-python==12.2.1\n","cudf-cu12 @ https://pypi.nvidia.com/cudf-cu12/cudf_cu12-24.6.1-cp310-cp310-manylinux_2_28_x86_64.whl#sha256=6fdd6fd412117503ad23dca75aabb5b536348d3af459b59920152be1a0af6f15\n","cufflinks==0.17.3\n","cupy-cuda12x==12.2.0\n","cvxopt==1.3.2\n","cvxpy==1.5.3\n","cycler==0.12.1\n","cymem==2.0.8\n","Cython==3.0.11\n","dask==2024.8.0\n","datascience==0.17.6\n","db-dtypes==1.3.0\n","dbus-python==1.2.18\n","debugpy==1.6.6\n","decorator==4.4.2\n","defusedxml==0.7.1\n","Deprecated==1.2.14\n","distributed==2024.8.0\n","distro==1.7.0\n","dlib==19.24.2\n","dm-tree==0.1.8\n","docstring_parser==0.16\n","docutils==0.18.1\n","dopamine_rl==4.0.9\n","duckdb==1.1.1\n","earthengine-api==1.0.0\n","easydict==1.13\n","ecos==2.0.14\n","editdistance==0.8.1\n","eerepr==0.0.4\n","einops==0.8.0\n","en-core-web-sm @ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.7.1/en_core_web_sm-3.7.1-py3-none-any.whl#sha256=86cc141f63942d4b2c5fcee06630fd6f904788d2f0ab005cce45aadb8fb73889\n","entrypoints==0.4\n","et-xmlfile==1.1.0\n","etils==1.9.4\n","etuples==0.3.9\n","eval_type_backport==0.2.0\n","exceptiongroup==1.2.2\n","fastai==2.7.17\n","fastcore==1.7.10\n","fastdownload==0.0.7\n","fastjsonschema==2.20.0\n","fastprogress==1.0.3\n","fastrlock==0.8.2\n","filelock==3.16.1\n","firebase-admin==6.5.0\n","Flask==2.2.5\n","flatbuffers==24.3.25\n","flax==0.8.5\n","folium==0.17.0\n","fonttools==4.54.1\n","frozendict==2.4.4\n","frozenlist==1.4.1\n","fsspec==2024.6.1\n","future==1.0.0\n","gast==0.6.0\n","gcsfs==2024.6.1\n","GDAL==3.6.4\n","gdown==5.2.0\n","geemap==0.34.5\n","gensim==4.3.3\n","geocoder==1.38.1\n","geographiclib==2.0\n","geopandas==1.0.1\n","geopy==2.4.1\n","gin-config==0.5.0\n","glob2==0.7\n","google==2.0.3\n","google-ai-generativelanguage==0.6.6\n","google-api-core==2.19.2\n","google-api-python-client==2.137.0\n","google-auth==2.27.0\n","google-auth-httplib2==0.2.0\n","google-auth-oauthlib==1.2.1\n","google-cloud-aiplatform==1.68.0\n","google-cloud-bigquery==3.25.0\n","google-cloud-bigquery-connection==1.15.5\n","google-cloud-bigquery-storage==2.26.0\n","google-cloud-bigtable==2.26.0\n","google-cloud-core==2.4.1\n","google-cloud-datastore==2.19.0\n","google-cloud-firestore==2.16.1\n","google-cloud-functions==1.16.5\n","google-cloud-iam==2.15.2\n","google-cloud-language==2.13.4\n","google-cloud-pubsub==2.25.1\n","google-cloud-resource-manager==1.12.5\n","google-cloud-storage==2.8.0\n","google-cloud-translate==3.15.5\n","google-colab @ file:///colabtools/dist/google_colab-1.0.0.tar.gz#sha256=5a6ef0db4627b20a8768d2d544072fc964ba8f2c799b89f51072ea0203d0bd22\n","google-crc32c==1.6.0\n","google-generativeai==0.7.2\n","google-pasta==0.2.0\n","google-resumable-media==2.7.2\n","googleapis-common-protos==1.65.0\n","googledrivedownloader==0.4\n","graphviz==0.20.3\n","greenlet==3.1.1\n","grpc-google-iam-v1==0.13.1\n","grpcio==1.64.1\n","grpcio-status==1.48.2\n","gspread==6.0.2\n","gspread-dataframe==3.3.1\n","gym==0.25.2\n","gym-notices==0.0.8\n","h5netcdf==1.3.0\n","h5py==3.11.0\n","holidays==0.57\n","holoviews==1.19.1\n","html5lib==1.1\n","httpimport==1.4.0\n","httplib2==0.22.0\n","huggingface-hub==0.24.7\n","humanize==4.10.0\n","hyperopt==0.2.7\n","ibis-framework==9.2.0\n","idna==3.10\n","imageio==2.35.1\n","imageio-ffmpeg==0.5.1\n","imagesize==1.4.1\n","imbalanced-learn==0.12.3\n","imgaug==0.4.0\n","immutabledict==4.2.0\n","importlib_metadata==8.4.0\n","importlib_resources==6.4.5\n","imutils==0.5.4\n","inflect==7.4.0\n","iniconfig==2.0.0\n","intel-cmplr-lib-ur==2024.2.1\n","intel-openmp==2024.2.1\n","ipyevents==2.0.2\n","ipyfilechooser==0.6.0\n","ipykernel==5.5.6\n","ipyleaflet==0.19.2\n","ipyparallel==8.8.0\n","ipython==7.34.0\n","ipython-genutils==0.2.0\n","ipython-sql==0.5.0\n","ipytree==0.2.2\n","ipywidgets==7.7.1\n","itsdangerous==2.2.0\n","japanize-matplotlib==1.1.3\n","jax==0.4.33\n","jax-cuda12-pjrt==0.4.33\n","jax-cuda12-plugin==0.4.33\n","jaxlib==0.4.33\n","jeepney==0.7.1\n","jellyfish==1.1.0\n","jieba==0.42.1\n","Jinja2==3.1.4\n","joblib==1.4.2\n","jsonpickle==3.3.0\n","jsonschema==4.23.0\n","jsonschema-specifications==2023.12.1\n","jupyter-client==6.1.12\n","jupyter-console==6.1.0\n","jupyter-leaflet==0.19.2\n","jupyter-server==1.24.0\n","jupyter_core==5.7.2\n","jupyterlab_pygments==0.3.0\n","jupyterlab_widgets==3.0.13\n","kaggle==1.6.17\n","kagglehub==0.3.0\n","keras==3.4.1\n","keyring==23.5.0\n","kiwisolver==1.4.7\n","langcodes==3.4.1\n","language_data==1.2.0\n","launchpadlib==1.10.16\n","lazr.restfulclient==0.14.4\n","lazr.uri==1.0.6\n","lazy_loader==0.4\n","libclang==18.1.1\n","librosa==0.10.2.post1\n","lightgbm==4.5.0\n","linkify-it-py==2.0.3\n","llvmlite==0.43.0\n","locket==1.0.0\n","logical-unification==0.4.6\n","lxml==4.9.4\n","Mako==1.3.5\n","marisa-trie==1.2.0\n","Markdown==3.7\n","markdown-it-py==3.0.0\n","MarkupSafe==2.1.5\n","matplotlib==3.7.1\n","matplotlib-inline==0.1.7\n","matplotlib-venn==1.1.1\n","mdit-py-plugins==0.4.2\n","mdurl==0.1.2\n","miniKanren==1.0.3\n","missingno==0.5.2\n","mistune==0.8.4\n","mizani==0.11.4\n","mkl==2024.2.2\n","ml-dtypes==0.4.1\n","mlxtend==0.23.1\n","more-itertools==10.5.0\n","moviepy==1.0.3\n","mpmath==1.3.0\n","msgpack==1.0.8\n","multidict==6.1.0\n","multipledispatch==1.0.0\n","multitasking==0.0.11\n","murmurhash==1.0.10\n","music21==9.1.0\n","namex==0.0.8\n","natsort==8.4.0\n","nbclassic==1.1.0\n","nbclient==0.10.0\n","nbconvert==6.5.4\n","nbformat==5.10.4\n","nest-asyncio==1.6.0\n","networkx==3.3\n","nibabel==5.2.1\n","nltk==3.8.1\n","notebook==6.5.5\n","notebook_shim==0.2.4\n","numba==0.60.0\n","numexpr==2.10.1\n","numpy==1.26.4\n","nvidia-cublas-cu12==12.6.1.4\n","nvidia-cuda-cupti-cu12==12.6.68\n","nvidia-cuda-nvcc-cu12==12.6.68\n","nvidia-cuda-runtime-cu12==12.6.68\n","nvidia-cudnn-cu12==9.4.0.58\n","nvidia-cufft-cu12==11.2.6.59\n","nvidia-cusolver-cu12==11.6.4.69\n","nvidia-cusparse-cu12==12.5.3.3\n","nvidia-nccl-cu12==2.23.4\n","nvidia-nvjitlink-cu12==12.6.68\n","nvtx==0.2.10\n","oauth2client==4.1.3\n","oauthlib==3.2.2\n","opencv-contrib-python==4.10.0.84\n","opencv-python==4.10.0.84\n","opencv-python-headless==4.10.0.84\n","openpyxl==3.1.5\n","opentelemetry-api==1.27.0\n","opentelemetry-sdk==1.27.0\n","opentelemetry-semantic-conventions==0.48b0\n","opt_einsum==3.4.0\n","optax==0.2.3\n","optree==0.12.1\n","optuna==4.0.0\n","orbax-checkpoint==0.6.4\n","osqp==0.6.7.post0\n","packaging==24.1\n","pandas==2.2.2\n","pandas-datareader==0.10.0\n","pandas-gbq==0.23.2\n","pandas-stubs==2.2.2.240909\n","pandocfilters==1.5.1\n","panel==1.4.5\n","param==2.1.1\n","parso==0.8.4\n","parsy==2.1\n","partd==1.4.2\n","pathlib==1.0.1\n","patsy==0.5.6\n","peewee==3.17.6\n","pexpect==4.9.0\n","pickleshare==0.7.5\n","pillow==10.4.0\n","pip-tools==7.4.1\n","platformdirs==4.3.6\n","plotly==5.24.1\n","plotnine==0.13.6\n","pluggy==1.5.0\n","polars==1.6.0\n","pooch==1.8.2\n","portpicker==1.5.2\n","prefetch_generator==1.0.3\n","preshed==3.0.9\n","prettytable==3.11.0\n","proglog==0.1.10\n","progressbar2==4.5.0\n","prometheus_client==0.21.0\n","promise==2.3\n","prompt_toolkit==3.0.48\n","prophet==1.1.5\n","proto-plus==1.24.0\n","protobuf==3.20.3\n","psutil==5.9.5\n","psycopg2==2.9.9\n","ptyprocess==0.7.0\n","py-cpuinfo==9.0.0\n","py4j==0.10.9.7\n","pyarrow==16.1.0\n","pyarrow-hotfix==0.6\n","pyasn1==0.6.1\n","pyasn1_modules==0.4.1\n","pycocotools==2.0.8\n","pycparser==2.22\n","pydantic==2.9.2\n","pydantic_core==2.23.4\n","pydata-google-auth==1.8.2\n","pydot==3.0.2\n","pydot-ng==2.0.0\n","pydotplus==2.0.2\n","PyDrive==1.3.1\n","PyDrive2==1.20.0\n","pyerfa==2.0.1.4\n","pygame==2.6.1\n","Pygments==2.18.0\n","PyGObject==3.42.1\n","PyJWT==2.9.0\n","pymc==5.16.2\n","pymystem3==0.2.0\n","pynvjitlink-cu12==0.3.0\n","pyogrio==0.10.0\n","PyOpenGL==3.1.7\n","pyOpenSSL==24.2.1\n","pyparsing==3.1.4\n","pyperclip==1.9.0\n","pyproj==3.6.1\n","pyproject_hooks==1.2.0\n","pyshp==2.3.1\n","PySocks==1.7.1\n","pytensor==2.25.4\n","pytest==7.4.4\n","python-apt==2.4.0\n","python-box==7.2.0\n","python-dateutil==2.8.2\n","python-louvain==0.16\n","python-slugify==8.0.4\n","python-utils==3.9.0\n","pytz==2024.2\n","pyviz_comms==3.0.3\n","PyYAML==6.0.2\n","pyzmq==24.0.1\n","qdldl==0.1.7.post4\n","ratelim==0.1.6\n","referencing==0.35.1\n","regex==2024.9.11\n","requests==2.32.3\n","requests-oauthlib==1.3.1\n","requirements-parser==0.9.0\n","rich==13.8.1\n","rmm-cu12==24.6.0\n","rpds-py==0.20.0\n","rpy2==3.4.2\n","rsa==4.9\n","safetensors==0.4.5\n","scikit-image==0.24.0\n","scikit-learn==1.5.2\n","scipy==1.13.1\n","scooby==0.10.0\n","scs==3.2.7\n","seaborn==0.13.1\n","SecretStorage==3.3.1\n","Send2Trash==1.8.3\n","sentencepiece==0.2.0\n","shapely==2.0.6\n","shellingham==1.5.4\n","simple-parsing==0.1.6\n","six==1.16.0\n","sklearn-pandas==2.2.0\n","smart-open==7.0.4\n","sniffio==1.3.1\n","snowballstemmer==2.2.0\n","sortedcontainers==2.4.0\n","soundfile==0.12.1\n","soupsieve==2.6\n","soxr==0.5.0.post1\n","spacy==3.7.5\n","spacy-legacy==3.0.12\n","spacy-loggers==1.0.5\n","Sphinx==5.0.2\n","sphinxcontrib-applehelp==2.0.0\n","sphinxcontrib-devhelp==2.0.0\n","sphinxcontrib-htmlhelp==2.1.0\n","sphinxcontrib-jsmath==1.0.1\n","sphinxcontrib-qthelp==2.0.0\n","sphinxcontrib-serializinghtml==2.0.0\n","SQLAlchemy==2.0.35\n","sqlglot==25.1.0\n","sqlparse==0.5.1\n","srsly==2.4.8\n","stanio==0.5.1\n","statsmodels==0.14.3\n","StrEnum==0.4.15\n","sympy==1.13.3\n","tables==3.8.0\n","tabulate==0.9.0\n","tbb==2021.13.1\n","tblib==3.0.0\n","tenacity==9.0.0\n","tensorboard==2.17.0\n","tensorboard-data-server==0.7.2\n","tensorflow==2.17.0\n","tensorflow-datasets==4.9.6\n","tensorflow-hub==0.16.1\n","tensorflow-io-gcs-filesystem==0.37.1\n","tensorflow-metadata==1.15.0\n","tensorflow-probability==0.24.0\n","tensorstore==0.1.66\n","termcolor==2.4.0\n","terminado==0.18.1\n","text-unidecode==1.3\n","textblob==0.17.1\n","tf-slim==1.1.0\n","tf_keras==2.17.0\n","thinc==8.2.5\n","threadpoolctl==3.5.0\n","tifffile==2024.9.20\n","tinycss2==1.3.0\n","tokenizers==0.19.1\n","toml==0.10.2\n","tomli==2.0.1\n","toolz==0.12.1\n","torch @ https://download.pytorch.org/whl/cu121_full/torch-2.4.1%2Bcu121-cp310-cp310-linux_x86_64.whl#sha256=f3ed9a2b7f8671b2b32a2f036d1b81055eb3ad9b18ba43b705aa34bae4289e1a\n","torchaudio @ https://download.pytorch.org/whl/cu121_full/torchaudio-2.4.1%2Bcu121-cp310-cp310-linux_x86_64.whl#sha256=da8c87c80a1c1376a48dc33eef30b03bbdf1df25a05bd2b1c620b8811c7b19be\n","torchsummary==1.5.1\n","torchvision @ https://download.pytorch.org/whl/cu121_full/torchvision-0.19.1%2Bcu121-cp310-cp310-linux_x86_64.whl#sha256=b8cc4bf381b75522995b601e07a1b433b5fd925dc3e34a7fa6cd22f449d65379\n","tornado==6.3.3\n","tqdm==4.66.5\n","traitlets==5.7.1\n","traittypes==0.2.1\n","transformers==4.44.2\n","tweepy==4.14.0\n","typeguard==4.3.0\n","typer==0.12.5\n","types-pytz==2024.2.0.20240913\n","types-setuptools==75.1.0.20240917\n","typing_extensions==4.12.2\n","tzdata==2024.2\n","tzlocal==5.2\n","uc-micro-py==1.0.3\n","uritemplate==4.1.1\n","urllib3==2.2.3\n","vega-datasets==0.9.0\n","wadllib==1.3.6\n","wasabi==1.1.3\n","wcwidth==0.2.13\n","weasel==0.4.1\n","webcolors==24.8.0\n","webencodings==0.5.1\n","websocket-client==1.8.0\n","Werkzeug==3.0.4\n","widgetsnbextension==3.6.9\n","wordcloud==1.9.3\n","wrapt==1.16.0\n","xarray==2024.9.0\n","xarray-einstats==0.8.0\n","xgboost==2.1.1\n","xlrd==2.0.1\n","xyzservices==2024.9.0\n","yarl==1.13.1\n","yellowbrick==1.5\n","yfinance==0.2.43\n","zict==3.0.0\n","zipp==3.20.2\n"]}],"source":["!pip freeze"]},{"cell_type":"markdown","metadata":{"id":"wIh2fP6l0c1r"},"source":["## 前処理"]},{"cell_type":"code","execution_count":63,"metadata":{"id":"444i0jHmpRgb","executionInfo":{"status":"ok","timestamp":1727944717600,"user_tz":-540,"elapsed":2,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["def normalize_moyori(moyori):\n","    if moyori == moyori:\n","        if moyori in ('30分?60分',\"30分～60分\"):\n","            moyori = 45\n","        elif moyori in ('1H?1H30','1H～1H30'):\n","            moyori = 75\n","        elif moyori in ('1H30?2H','1H30～2H'):\n","            moyori = 105\n","        elif moyori in ('2H?','2H～'):\n","            moyori = 120\n","        moyori = int(float(moyori))\n","    return moyori"]},{"cell_type":"code","source":["def normalize_area(area):\n","    if pd.isna(area):  # NaN値のチェック\n","        return area\n","\n","    if isinstance(area, (int, float)):  # すでに数値の場合はそのまま返す\n","        return area\n","\n","    # 文字列に変換\n","    area_str = str(area)\n","\n","    # 数字以外の文字を削除\n","    area_num = re.sub(r'[^\\d]', '', area_str)\n","\n","    # 空文字列になった場合（数字が含まれていない場合）はNaNを返す\n","    if area_num == '':\n","        return pd.NA\n","\n","    # 整数に変換して返す\n","    return int(area_num)\n"],"metadata":{"id":"BiAQlAGWSGTa","executionInfo":{"status":"ok","timestamp":1727944717600,"user_tz":-540,"elapsed":2,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","execution_count":65,"metadata":{"id":"B6UWeBQqpRgb","executionInfo":{"status":"ok","timestamp":1727944717600,"user_tz":-540,"elapsed":1,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["def convert_wareki_to_seireki(wareki):\n","    seireki = \"INIT\"\n","    if wareki == wareki:\n","        if wareki == '戦前':\n","            wareki = '昭和20年'\n","        value = wareki[2:-1]\n","        if value == '元':\n","            value = 1\n","        else:\n","            value = int(value)\n","        if '昭和' in wareki:\n","            seireki = 1925+value\n","        elif '平成' in wareki:\n","            seireki = 1988+value\n","        elif '令和' in wareki:\n","            seireki = 2018+value\n","    else:\n","        seireki = wareki\n","    return seireki"]},{"cell_type":"code","execution_count":66,"metadata":{"id":"JnKbke99pRgc","executionInfo":{"status":"ok","timestamp":1727944717600,"user_tz":-540,"elapsed":1,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["BASE_PATH = './data/'"]},{"cell_type":"code","execution_count":106,"metadata":{"id":"dlvuK497pRgc","colab":{"base_uri":"https://localhost:8080/"},"outputId":"3623e8c8-8abe-484c-f478-a3a959efe973","executionInfo":{"status":"ok","timestamp":1727945779002,"user_tz":-540,"elapsed":8837,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-106-a59eff511f2d>:4: DtypeWarning: Columns (10) have mixed types. Specify dtype option on import or set low_memory=False.\n","  train_df = pd.read_csv(path)\n","<ipython-input-106-a59eff511f2d>:4: DtypeWarning: Columns (10) have mixed types. Specify dtype option on import or set low_memory=False.\n","  train_df = pd.read_csv(path)\n","<ipython-input-106-a59eff511f2d>:4: DtypeWarning: Columns (10) have mixed types. Specify dtype option on import or set low_memory=False.\n","  train_df = pd.read_csv(path)\n"]}],"source":["paths = glob(BASE_PATH + 'input/train/*')\n","train_dfs = []\n","for path in paths:\n","    train_df = pd.read_csv(path)\n","    train_dfs.append(train_df)\n","train_df = pd.concat(train_dfs)\n","train_df.reset_index(drop=True, inplace=True)\n","test_df = pd.read_csv(BASE_PATH + 'input/test.csv')"]},{"cell_type":"code","execution_count":107,"metadata":{"id":"evmYy0RDpRgc","colab":{"base_uri":"https://localhost:8080/","height":962},"outputId":"f87a5abb-0dc4-400b-8752-9f9461a666cf","executionInfo":{"status":"ok","timestamp":1727945781607,"user_tz":-540,"elapsed":948,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID                   0\n","種類                   0\n","地域              847189\n","市区町村コード              0\n","都道府県名                0\n","市区町村名                0\n","地区名                661\n","最寄駅：名称            2877\n","最寄駅：距離（分）        23303\n","間取り              33559\n","面積（㎡）                0\n","土地の形状           847189\n","間口              847189\n","延床面積（㎡）         847189\n","建築年              24863\n","建物の構造            25752\n","用途              101766\n","今後の利用目的         370502\n","前面道路：方位         847189\n","前面道路：種類         847189\n","前面道路：幅員（ｍ）      847189\n","都市計画             21737\n","建ぺい率（％）          26724\n","容積率（％）           26724\n","取引時点                 0\n","改装               87499\n","取引の事情等          827336\n","取引価格（総額）_log         0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>種類</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>地域</th>\n","      <td>847189</td>\n","    </tr>\n","    <tr>\n","      <th>市区町村コード</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>都道府県名</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>市区町村名</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>地区名</th>\n","      <td>661</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：名称</th>\n","      <td>2877</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）</th>\n","      <td>23303</td>\n","    </tr>\n","    <tr>\n","      <th>間取り</th>\n","      <td>33559</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>土地の形状</th>\n","      <td>847189</td>\n","    </tr>\n","    <tr>\n","      <th>間口</th>\n","      <td>847189</td>\n","    </tr>\n","    <tr>\n","      <th>延床面積（㎡）</th>\n","      <td>847189</td>\n","    </tr>\n","    <tr>\n","      <th>建築年</th>\n","      <td>24863</td>\n","    </tr>\n","    <tr>\n","      <th>建物の構造</th>\n","      <td>25752</td>\n","    </tr>\n","    <tr>\n","      <th>用途</th>\n","      <td>101766</td>\n","    </tr>\n","    <tr>\n","      <th>今後の利用目的</th>\n","      <td>370502</td>\n","    </tr>\n","    <tr>\n","      <th>前面道路：方位</th>\n","      <td>847189</td>\n","    </tr>\n","    <tr>\n","      <th>前面道路：種類</th>\n","      <td>847189</td>\n","    </tr>\n","    <tr>\n","      <th>前面道路：幅員（ｍ）</th>\n","      <td>847189</td>\n","    </tr>\n","    <tr>\n","      <th>都市計画</th>\n","      <td>21737</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）</th>\n","      <td>26724</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）</th>\n","      <td>26724</td>\n","    </tr>\n","    <tr>\n","      <th>取引時点</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>改装</th>\n","      <td>87499</td>\n","    </tr>\n","    <tr>\n","      <th>取引の事情等</th>\n","      <td>827336</td>\n","    </tr>\n","    <tr>\n","      <th>取引価格（総額）_log</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":107}],"source":["train_df.isnull().sum()"]},{"cell_type":"code","execution_count":108,"metadata":{"id":"SehETeyUpRgd","executionInfo":{"status":"ok","timestamp":1727945792382,"user_tz":-540,"elapsed":457,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["sub_df = pd.read_csv(BASE_PATH + 'input/sample_submission.csv')"]},{"cell_type":"code","execution_count":109,"metadata":{"id":"udqHdH9MpRgd","executionInfo":{"status":"ok","timestamp":1727945794062,"user_tz":-540,"elapsed":311,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["ID = 'ID'\n","TARGET = '取引価格（総額）_log'\n","rm_cols = []"]},{"cell_type":"code","execution_count":110,"metadata":{"id":"8FoGfIwxpRge","colab":{"base_uri":"https://localhost:8080/"},"outputId":"34f30abd-09f4-4b86-c00d-0e91ffc51379","executionInfo":{"status":"ok","timestamp":1727945795814,"user_tz":-540,"elapsed":973,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['市区町村コード', '地域', '土地の形状', '間口', '延床面積（㎡）', '前面道路：方位', '前面道路：種類', '前面道路：幅員（ｍ）']"]},"metadata":{},"execution_count":110}],"source":["df = pd.concat([train_df, test_df])\n","\n","rm_cols += ['市区町村コード']\n","\n","rm_cols += df.columns[df.notna().sum() <= 1].tolist()\n","\n","rm_cols"]},{"cell_type":"code","execution_count":111,"metadata":{"id":"j1LZb8qMpRge","colab":{"base_uri":"https://localhost:8080/"},"outputId":"8a57929d-3c3d-40a0-fcff-894c08061e83","executionInfo":{"status":"ok","timestamp":1727945797890,"user_tz":-540,"elapsed":1587,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(866579, 20)"]},"metadata":{},"execution_count":111}],"source":["test_df[TARGET] = np.nan\n","train_df.drop(rm_cols, axis=1, inplace=True)\n","test_df.drop(rm_cols, axis=1, inplace=True)\n","df = pd.concat([train_df, test_df])\n","df.sort_values('取引時点', inplace=True)\n","df.reset_index(drop=True, inplace=True)\n","df.shape"]},{"cell_type":"code","execution_count":112,"metadata":{"id":"6oqA6qIynMO2","colab":{"base_uri":"https://localhost:8080/"},"outputId":"c8c2d52b-3280-4b22-962d-c803f91983fc","executionInfo":{"status":"ok","timestamp":1727945800016,"user_tz":-540,"elapsed":392,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['2005年第3四半期', '2005年第4四半期', '2006年第1四半期', '2006年第2四半期',\n","       '2006年第3四半期', '2006年第4四半期', '2007年第1四半期', '2007年第2四半期',\n","       '2007年第3四半期', '2007年第4四半期', '2008年第1四半期', '2008年第2四半期',\n","       '2008年第3四半期', '2008年第4四半期', '2009年第1四半期', '2009年第2四半期',\n","       '2009年第3四半期', '2009年第4四半期', '2010年第1四半期', '2010年第2四半期',\n","       '2010年第3四半期', '2010年第4四半期', '2011年第1四半期', '2011年第2四半期',\n","       '2011年第3四半期', '2011年第4四半期', '2012年第1四半期', '2012年第2四半期',\n","       '2012年第3四半期', '2012年第4四半期', '2013年第1四半期', '2013年第2四半期',\n","       '2013年第3四半期', '2013年第4四半期', '2014年第1四半期', '2014年第2四半期',\n","       '2014年第3四半期', '2014年第4四半期', '2015年第1四半期', '2015年第2四半期',\n","       '2015年第3四半期', '2015年第4四半期', '2016年第1四半期', '2016年第2四半期',\n","       '2016年第3四半期', '2016年第4四半期', '2017年第1四半期', '2017年第2四半期',\n","       '2017年第3四半期', '2017年第4四半期', '2018年第1四半期', '2018年第2四半期',\n","       '2018年第3四半期', '2018年第4四半期', '2019年第1四半期', '2019年第2四半期',\n","       '2019年第3四半期', '2019年第4四半期', '2020年第1四半期', '2020年第2四半期',\n","       '2020年第3四半期', '2020年第4四半期', '2021年第1四半期', '2021年第2四半期',\n","       '2021年第3四半期', '2021年第4四半期', '2022年第1四半期', '2022年第2四半期',\n","       '2022年第3四半期', '2022年第4四半期', '2023年第1四半期', '2023年第2四半期',\n","       '2023年第3四半期', '2023年第4四半期', '2024年第1四半期'], dtype=object)"]},"metadata":{},"execution_count":112}],"source":["df['取引時点'].unique()"]},{"cell_type":"code","execution_count":113,"metadata":{"id":"yJl_gacnvmCY","colab":{"base_uri":"https://localhost:8080/"},"outputId":"377a0b43-4ba8-40f1-8f9b-e8fd8a03c2f4","executionInfo":{"status":"ok","timestamp":1727945803146,"user_tz":-540,"elapsed":923,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(820591, 847189)"]},"metadata":{},"execution_count":113}],"source":["val_min_idx = min(df[df['取引時点'].str.contains('2023年第2四半期|2023年第3四半期', regex=True)].index)\n","test_min_idx = min(df[df['取引時点'].str.contains('2023年第4四半期|2024年第1四半期', regex=True)].index)\n","val_min_idx, test_min_idx"]},{"cell_type":"code","execution_count":114,"metadata":{"id":"za_6BA5X-A_X","colab":{"base_uri":"https://localhost:8080/"},"outputId":"6f0a06aa-9d47-4015-a066-69660961fe0b","executionInfo":{"status":"ok","timestamp":1727945808632,"user_tz":-540,"elapsed":681,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'2023年第2四半期', '2023年第3四半期'}"]},"metadata":{},"execution_count":114}],"source":["set(df.iloc[val_min_idx:test_min_idx, :]['取引時点'].values)"]},{"cell_type":"code","execution_count":115,"metadata":{"id":"U1-jbdrKpRgf","executionInfo":{"status":"ok","timestamp":1727945809010,"user_tz":-540,"elapsed":2,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["enc_dic = {}\n","for i, e in enumerate(sorted(list(set(df['取引時点'].values)))):\n","    enc_dic[e] = i\n","df['取引時点_enc'] = df['取引時点'].map(enc_dic)"]},{"cell_type":"code","execution_count":116,"metadata":{"id":"Pp70asTFpRgf","colab":{"base_uri":"https://localhost:8080/"},"outputId":"65de494a-ff84-485c-df56-f0b16d6a3afe","executionInfo":{"status":"ok","timestamp":1727945817006,"user_tz":-540,"elapsed":7997,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'三重県': 7.099989772836439,\n"," '京都府': 7.155935848555253,\n"," '佐賀県': 7.009937258263509,\n"," '兵庫県': 7.157742870483196,\n"," '北海道': 6.965967793677859,\n"," '千葉県': 7.155825324964995,\n"," '和歌山県': 7.022690210815773,\n"," '埼玉県': 7.1697442713966355,\n"," '大分県': 6.911537826573079,\n"," '大阪府': 7.158352973821201,\n"," '奈良県': 7.056884610234688,\n"," '宮城県': 7.0395442538048805,\n"," '宮崎県': 6.958678653711235,\n"," '富山県': 7.0469200713870155,\n"," '山口県': 7.045342730349803,\n"," '山形県': 7.087990602814902,\n"," '山梨県': 6.848839888686708,\n"," '岐阜県': 7.078095913486453,\n"," '岡山県': 7.03809073492747,\n"," '岩手県': 6.925002679060599,\n"," '島根県': 7.165376214700312,\n"," '広島県': 7.093449021655064,\n"," '徳島県': 6.912051981629745,\n"," '愛媛県': 6.966433011596662,\n"," '愛知県': 7.107301969238601,\n"," '新潟県': 6.913835156235044,\n"," '東京都': 7.377929204641064,\n"," '栃木県': 6.950636958071011,\n"," '沖縄県': 7.160046604428336,\n"," '滋賀県': 7.16602695816839,\n"," '熊本県': 6.970182251843263,\n"," '石川県': 6.929363348877185,\n"," '神奈川県': 7.2581182672098175,\n"," '福井県': 6.979575815840195,\n"," '福岡県': 6.992264905042226,\n"," '福島県': 6.9743805791401785,\n"," '秋田県': 6.94131374711264,\n"," '群馬県': 6.928069391036607,\n"," '茨城県': 7.075528163782812,\n"," '長崎県': 7.150784996001117,\n"," '長野県': 7.063121700154463,\n"," '青森県': 6.9556107539806185,\n"," '静岡県': 7.0170037911973155,\n"," '香川県': 6.903679020975967,\n"," '高知県': 6.98595825905006,\n"," '鳥取県': 6.940192902720598,\n"," '鹿児島県': 7.095567581694406}"]},"metadata":{},"execution_count":116}],"source":["te_dic = {}\n","time_col = '取引時点_enc'\n","group_col = '都道府県名'\n","\n","for i in set(df[time_col].values):\n","    tmp_df = df[df[time_col] < i]\n","    te_dic[i] = tmp_df.groupby(group_col)[TARGET].agg('mean').to_dict()\n","\n","te_dic[50]"]},{"cell_type":"code","execution_count":117,"metadata":{"id":"rArMjGd7pRgf","colab":{"base_uri":"https://localhost:8080/","height":471},"outputId":"e90cdc21-dae0-4deb-8096-ef5c28fdc450","executionInfo":{"status":"ok","timestamp":1727945835113,"user_tz":-540,"elapsed":18123,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID        種類 都道府県名 市区町村名     地区名 最寄駅：名称 最寄駅：距離（分）   間取り 面積（㎡）    建築年  \\\n","0  13319067  中古マンション等   東京都   板橋区      若木    上板橋        15   ３ＤＫ    55  1970年   \n","1  13018669  中古マンション等   東京都   中央区  日本橋箱崎町   水天宮前       NaN  ２ＬＤＫ    60  1996年   \n","\n","   ... 今後の利用目的  都市計画 建ぺい率（％） 容積率（％）        取引時点   改装 取引の事情等 取引価格（総額）_log  \\\n","0  ...     NaN  １中住専    60.0  200.0  2005年第3四半期  未改装    NaN     7.079181   \n","1  ...     NaN    商業    80.0  700.0  2005年第3四半期  未改装    NaN     7.568202   \n","\n","  取引時点_enc  都道府県名_te  \n","0        0       0.0  \n","1        0       0.0  \n","\n","[2 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-fbc919d4-db13-450f-a723-1e5022ef3794\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>種類</th>\n","      <th>都道府県名</th>\n","      <th>市区町村名</th>\n","      <th>地区名</th>\n","      <th>最寄駅：名称</th>\n","      <th>最寄駅：距離（分）</th>\n","      <th>間取り</th>\n","      <th>面積（㎡）</th>\n","      <th>建築年</th>\n","      <th>...</th>\n","      <th>今後の利用目的</th>\n","      <th>都市計画</th>\n","      <th>建ぺい率（％）</th>\n","      <th>容積率（％）</th>\n","      <th>取引時点</th>\n","      <th>改装</th>\n","      <th>取引の事情等</th>\n","      <th>取引価格（総額）_log</th>\n","      <th>取引時点_enc</th>\n","      <th>都道府県名_te</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13319067</td>\n","      <td>中古マンション等</td>\n","      <td>東京都</td>\n","      <td>板橋区</td>\n","      <td>若木</td>\n","      <td>上板橋</td>\n","      <td>15</td>\n","      <td>３ＤＫ</td>\n","      <td>55</td>\n","      <td>1970年</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>１中住専</td>\n","      <td>60.0</td>\n","      <td>200.0</td>\n","      <td>2005年第3四半期</td>\n","      <td>未改装</td>\n","      <td>NaN</td>\n","      <td>7.079181</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13018669</td>\n","      <td>中古マンション等</td>\n","      <td>東京都</td>\n","      <td>中央区</td>\n","      <td>日本橋箱崎町</td>\n","      <td>水天宮前</td>\n","      <td>NaN</td>\n","      <td>２ＬＤＫ</td>\n","      <td>60</td>\n","      <td>1996年</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>商業</td>\n","      <td>80.0</td>\n","      <td>700.0</td>\n","      <td>2005年第3四半期</td>\n","      <td>未改装</td>\n","      <td>NaN</td>\n","      <td>7.568202</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fbc919d4-db13-450f-a723-1e5022ef3794')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fbc919d4-db13-450f-a723-1e5022ef3794 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fbc919d4-db13-450f-a723-1e5022ef3794');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-084aa58e-5ecc-4cc9-b9c0-9fc232ec7816\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-084aa58e-5ecc-4cc9-b9c0-9fc232ec7816')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-084aa58e-5ecc-4cc9-b9c0-9fc232ec7816 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":117}],"source":["def calc_te(row):\n","    if row[time_col] in te_dic and row[group_col] in te_dic[row[time_col]]:\n","        return te_dic[row[time_col]][row[group_col]]\n","    else:\n","        return 0\n","\n","df[group_col+'_te'] = df.apply(calc_te, axis=1)\n","df.head(2)"]},{"cell_type":"code","execution_count":118,"metadata":{"id":"BTrJ3EC_pRgf","executionInfo":{"status":"ok","timestamp":1727945838764,"user_tz":-540,"elapsed":3652,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["lastest_year = max(df['取引時点'].map(lambda x: int(x[:4])))\n","df['取引時点_何年前'] = df['取引時点'].apply(lambda x: lastest_year-int(x[:4]))\n","df.drop(['取引時点'], axis=1, inplace=True)\n","df['建築年'] = df['建築年'].apply(lambda x: convert_wareki_to_seireki(x))\n","df['面積（㎡）'] = df['面積（㎡）'].apply(lambda x: normalize_area(x))\n","df['最寄駅：距離（分）'] = df['最寄駅：距離（分）'].apply(lambda x: normalize_moyori(x))"]},{"cell_type":"code","execution_count":119,"metadata":{"id":"EDZ7tiKF36k1","executionInfo":{"status":"ok","timestamp":1727945838764,"user_tz":-540,"elapsed":3,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["#カテゴリカラムの選択\n","def select_categorical(df: pd.DataFrame):\n","    categorical_columns = df.select_dtypes(include=['object', 'category']).columns\n","    return df[categorical_columns].copy()\n","\n","#数値カラムの選択\n","def select_numerical(df: pd.DataFrame):\n","    numerical_columns = df.select_dtypes(include=['int', 'float']).columns\n","    return df[numerical_columns].copy()\n","\n","#ラベルエンコーディング\n","def encode_labels(df: pd.DataFrame):\n","    df = df.copy()  # 元のデータフレームを変更しないようにコピーを作成\n","    df = df.astype(str)  # 全ての列を文字列型に変換\n","    df = df.fillna(\"Missing\")  # 欠損値を \"Missing\" で埋める\n","\n","    for col in df.columns:\n","        le = LabelEncoder()\n","        df[col] = le.fit_transform(df[col])\n","\n","    return df\n","\n","#特徴量生成（A✖️B）\n","def combinate_yoseki(df: pd.DataFrame):\n","    df[\"面積（㎡）容積率（％）_combi\"] = df[\"面積（㎡）\"] * df[\"容積率（％）\"]\n","    return df[[\"面積（㎡）容積率（％）_combi\"]].copy()\n"]},{"cell_type":"code","execution_count":120,"metadata":{"id":"QYR7Sd8QpRgg","colab":{"base_uri":"https://localhost:8080/","height":112},"outputId":"f36ad047-72fc-4c8d-b6c9-56e3b7d36dd2","executionInfo":{"status":"ok","timestamp":1727945839205,"user_tz":-540,"elapsed":444,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  最寄駅：距離（分）  面積（㎡）  建ぺい率（％）  容積率（％）  取引価格（総額）_log  取引時点_enc  \\\n","0  13319067       15.0     55     60.0   200.0      7.079181         0   \n","1  13018669        NaN     60     80.0   700.0      7.568202         0   \n","\n","   都道府県名_te  取引時点_何年前  \n","0       0.0        19  \n","1       0.0        19  "],"text/html":["\n","  <div id=\"df-c49c0506-5b61-4c61-99b2-48205f9f64be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>最寄駅：距離（分）</th>\n","      <th>面積（㎡）</th>\n","      <th>建ぺい率（％）</th>\n","      <th>容積率（％）</th>\n","      <th>取引価格（総額）_log</th>\n","      <th>取引時点_enc</th>\n","      <th>都道府県名_te</th>\n","      <th>取引時点_何年前</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13319067</td>\n","      <td>15.0</td>\n","      <td>55</td>\n","      <td>60.0</td>\n","      <td>200.0</td>\n","      <td>7.079181</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13018669</td>\n","      <td>NaN</td>\n","      <td>60</td>\n","      <td>80.0</td>\n","      <td>700.0</td>\n","      <td>7.568202</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c49c0506-5b61-4c61-99b2-48205f9f64be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c49c0506-5b61-4c61-99b2-48205f9f64be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c49c0506-5b61-4c61-99b2-48205f9f64be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fff2c955-5019-4937-9821-2bff93c89ff1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fff2c955-5019-4937-9821-2bff93c89ff1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fff2c955-5019-4937-9821-2bff93c89ff1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"num_df"}},"metadata":{},"execution_count":120}],"source":["num_df = FunctionTransformer(select_numerical).fit_transform(df)\n","num_df.head(2)"]},{"cell_type":"code","execution_count":121,"metadata":{"id":"Bp_KYSA0pRgg","colab":{"base_uri":"https://localhost:8080/","height":112},"outputId":"7e9ca521-3f73-4914-f167-e560e1bafc62","executionInfo":{"status":"ok","timestamp":1727945844150,"user_tz":-540,"elapsed":4947,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   種類  都道府県名  市区町村名   地区名  最寄駅：名称  間取り  建築年  建物の構造  用途  今後の利用目的  都市計画  改装  \\\n","0   0     26    370  9982     194   34    1      5   7        0    11   2   \n","1   0     26     37  6305    2448   28    1     10   7        0     1   2   \n","\n","   取引の事情等  \n","0       0  \n","1       0  "],"text/html":["\n","  <div id=\"df-47785978-908c-4790-b022-7376083e2a97\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>種類</th>\n","      <th>都道府県名</th>\n","      <th>市区町村名</th>\n","      <th>地区名</th>\n","      <th>最寄駅：名称</th>\n","      <th>間取り</th>\n","      <th>建築年</th>\n","      <th>建物の構造</th>\n","      <th>用途</th>\n","      <th>今後の利用目的</th>\n","      <th>都市計画</th>\n","      <th>改装</th>\n","      <th>取引の事情等</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>370</td>\n","      <td>9982</td>\n","      <td>194</td>\n","      <td>34</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>37</td>\n","      <td>6305</td>\n","      <td>2448</td>\n","      <td>28</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47785978-908c-4790-b022-7376083e2a97')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47785978-908c-4790-b022-7376083e2a97 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47785978-908c-4790-b022-7376083e2a97');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4bf07858-2bdc-499b-91ec-44d355d0d497\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4bf07858-2bdc-499b-91ec-44d355d0d497')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4bf07858-2bdc-499b-91ec-44d355d0d497 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"le_df"}},"metadata":{},"execution_count":121}],"source":["encoder = make_pipeline(\n","    FunctionTransformer(select_categorical),\n","    FunctionTransformer(encode_labels),\n",")\n","\n","le_df = encoder.fit_transform(df)\n","le_df.head(2)"]},{"cell_type":"code","execution_count":122,"metadata":{"id":"AuySwDN1pRgg","colab":{"base_uri":"https://localhost:8080/","height":112},"outputId":"37fae845-ffde-45e1-9056-169138dd5cd2","executionInfo":{"status":"ok","timestamp":1727945844428,"user_tz":-540,"elapsed":281,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   面積（㎡）容積率（％）_combi\n","0              110.0\n","1              420.0"],"text/html":["\n","  <div id=\"df-83b01602-c00e-45aa-9a8c-7b4a503e52de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>面積（㎡）容積率（％）_combi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>110.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>420.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83b01602-c00e-45aa-9a8c-7b4a503e52de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-83b01602-c00e-45aa-9a8c-7b4a503e52de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-83b01602-c00e-45aa-9a8c-7b4a503e52de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7719ec40-1502-4a93-a341-bddf9641e19e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7719ec40-1502-4a93-a341-bddf9641e19e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7719ec40-1502-4a93-a341-bddf9641e19e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"num_comb_df"}},"metadata":{},"execution_count":122}],"source":["encoder = make_pipeline(\n","    FunctionTransformer(select_numerical),\n","    FunctionTransformer(combinate_yoseki),\n",")\n","\n","num_comb_df = encoder.fit_transform(df)/100\n","num_comb_df.head(2)"]},{"cell_type":"code","execution_count":123,"metadata":{"id":"L5GKKJT-pRgg","colab":{"base_uri":"https://localhost:8080/","height":202},"outputId":"07fc5fe7-968a-4d0d-90b1-c9b6d71607ea","executionInfo":{"status":"ok","timestamp":1727945846418,"user_tz":-540,"elapsed":1992,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   最寄駅：距離（分）_count  最寄駅：距離（分）_mean  最寄駅：距離（分）_min  最寄駅：距離（分）_max  面積（㎡）_count  \\\n","0            11815        7.378079            0.0          120.0        12323   \n","1            10994        4.320902            0.0           75.0        11389   \n","\n","   面積（㎡）_mean  面積（㎡）_min  面積（㎡）_max  建ぺい率（％）_count  建ぺい率（％）_mean  建ぺい率（％）_min  \\\n","0   44.952122         10        260          12166     67.511918         40.0   \n","1   44.041619         10       2000          11234     76.704647         60.0   \n","\n","   建ぺい率（％）_max  容積率（％）_count  容積率（％）_mean  容積率（％）_min  容積率（％）_max  \n","0         80.0         12166   302.646720        80.0       800.0  \n","1         80.0         11234   539.033292       100.0       900.0  "],"text/html":["\n","  <div id=\"df-9f492daa-0a21-42c5-a337-06d6a41579f7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>最寄駅：距離（分）_count</th>\n","      <th>最寄駅：距離（分）_mean</th>\n","      <th>最寄駅：距離（分）_min</th>\n","      <th>最寄駅：距離（分）_max</th>\n","      <th>面積（㎡）_count</th>\n","      <th>面積（㎡）_mean</th>\n","      <th>面積（㎡）_min</th>\n","      <th>面積（㎡）_max</th>\n","      <th>建ぺい率（％）_count</th>\n","      <th>建ぺい率（％）_mean</th>\n","      <th>建ぺい率（％）_min</th>\n","      <th>建ぺい率（％）_max</th>\n","      <th>容積率（％）_count</th>\n","      <th>容積率（％）_mean</th>\n","      <th>容積率（％）_min</th>\n","      <th>容積率（％）_max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11815</td>\n","      <td>7.378079</td>\n","      <td>0.0</td>\n","      <td>120.0</td>\n","      <td>12323</td>\n","      <td>44.952122</td>\n","      <td>10</td>\n","      <td>260</td>\n","      <td>12166</td>\n","      <td>67.511918</td>\n","      <td>40.0</td>\n","      <td>80.0</td>\n","      <td>12166</td>\n","      <td>302.646720</td>\n","      <td>80.0</td>\n","      <td>800.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10994</td>\n","      <td>4.320902</td>\n","      <td>0.0</td>\n","      <td>75.0</td>\n","      <td>11389</td>\n","      <td>44.041619</td>\n","      <td>10</td>\n","      <td>2000</td>\n","      <td>11234</td>\n","      <td>76.704647</td>\n","      <td>60.0</td>\n","      <td>80.0</td>\n","      <td>11234</td>\n","      <td>539.033292</td>\n","      <td>100.0</td>\n","      <td>900.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f492daa-0a21-42c5-a337-06d6a41579f7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9f492daa-0a21-42c5-a337-06d6a41579f7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9f492daa-0a21-42c5-a337-06d6a41579f7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4cf886aa-7fdc-4f26-910e-028b52cb8aa1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4cf886aa-7fdc-4f26-910e-028b52cb8aa1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4cf886aa-7fdc-4f26-910e-028b52cb8aa1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"agg_df"}},"metadata":{},"execution_count":123}],"source":["agg_dfs = []\n","\n","def get_agg_df(df, group_col):\n","    # agg_df = df.groupby(group_col).agg({\n","    #     \"最寄駅：距離（分）\": [\"count\", \"mean\", \"min\", \"max\"],\n","    #     \"面積（㎡）\": [\"count\", \"mean\", \"min\", \"max\"],\n","    #     \"建ぺい率（％）\": [\"count\", \"mean\", \"min\", \"max\"],\n","    #     \"容積率（％）\": [\"count\", \"mean\", \"min\", \"max\"]\n","    # }).reset_index()\n","    agg_cols = [\"最寄駅：距離（分）\", \"面積（㎡）\", \"建ぺい率（％）\", \"容積率（％）\"]\n","    cols = [group_col] + agg_cols\n","    agg_df = df[cols].copy()\n","    functions = [\"count\", \"mean\", \"min\", \"max\"]\n","    for col, function in product(agg_cols, functions):\n","        col_name = f\"{col}_{function}\"\n","        agg_df[col_name] = agg_df.groupby(group_col)[col].transform(function)\n","    return agg_df.drop(cols, axis = 1)\n","\n","group_col = '市区町村名'\n","agg_df = get_agg_df(df, group_col)\n","agg_df.head(2)"]},{"cell_type":"code","execution_count":124,"metadata":{"id":"lacPZpZpmOi2","colab":{"base_uri":"https://localhost:8080/"},"outputId":"f8c4ba6c-ac97-43c6-a5d9-d38fef85a0cf","executionInfo":{"status":"ok","timestamp":1727945846418,"user_tz":-540,"elapsed":2,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(866579, 16)"]},"metadata":{},"execution_count":124}],"source":["agg_df.shape"]},{"cell_type":"code","execution_count":125,"metadata":{"id":"SyT-F_j9pRgh","colab":{"base_uri":"https://localhost:8080/"},"outputId":"70d0a76f-3ba5-4150-a81c-af21df6d899c","executionInfo":{"status":"ok","timestamp":1727945846917,"user_tz":-540,"elapsed":500,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["(866579, 39)\n"]}],"source":["feat_df = pd.concat([num_df,le_df,num_comb_df, agg_df], axis=1)\n","print(feat_df.shape)"]},{"cell_type":"code","execution_count":126,"metadata":{"id":"b_IcHq_TieWc","colab":{"base_uri":"https://localhost:8080/","height":377},"outputId":"bca236e3-0559-499e-a248-1f805d9b21d6","executionInfo":{"status":"ok","timestamp":1727945846917,"user_tz":-540,"elapsed":8,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  最寄駅：距離（分）  面積（㎡）  建ぺい率（％）  容積率（％）  取引価格（総額）_log  取引時点_enc  \\\n","0  13319067       15.0     55     60.0   200.0      7.079181         0   \n","1  13018669        NaN     60     80.0   700.0      7.568202         0   \n","2  14103370        NaN     75      NaN     NaN      7.380211         0   \n","3  14090903        NaN     40     80.0   800.0      7.447158         0   \n","4  13317442        NaN     55     60.0   200.0      7.278754         0   \n","\n","   都道府県名_te  取引時点_何年前  種類  ...  面積（㎡）_min  面積（㎡）_max  建ぺい率（％）_count  \\\n","0       0.0        19   0  ...         10        260          12166   \n","1       0.0        19   0  ...         10       2000          11234   \n","2       0.0        19   0  ...         15       1100           4060   \n","3       0.0        19   0  ...         10        500           6418   \n","4       0.0        19   0  ...         10        260          12166   \n","\n","   建ぺい率（％）_mean  建ぺい率（％）_min  建ぺい率（％）_max  容積率（％）_count  容積率（％）_mean  \\\n","0     67.511918         40.0         80.0         12166   302.646720   \n","1     76.704647         60.0         80.0         11234   539.033292   \n","2     60.327586         40.0         80.0          4060   195.876847   \n","3     64.727329         40.0         80.0          6418   278.272047   \n","4     67.511918         40.0         80.0         12166   302.646720   \n","\n","   容積率（％）_min  容積率（％）_max  \n","0        80.0       800.0  \n","1       100.0       900.0  \n","2        80.0       800.0  \n","3        80.0      1200.0  \n","4        80.0       800.0  \n","\n","[5 rows x 39 columns]"],"text/html":["\n","  <div id=\"df-5ceeca27-3dbc-4619-b2dc-c2bba595805c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>最寄駅：距離（分）</th>\n","      <th>面積（㎡）</th>\n","      <th>建ぺい率（％）</th>\n","      <th>容積率（％）</th>\n","      <th>取引価格（総額）_log</th>\n","      <th>取引時点_enc</th>\n","      <th>都道府県名_te</th>\n","      <th>取引時点_何年前</th>\n","      <th>種類</th>\n","      <th>...</th>\n","      <th>面積（㎡）_min</th>\n","      <th>面積（㎡）_max</th>\n","      <th>建ぺい率（％）_count</th>\n","      <th>建ぺい率（％）_mean</th>\n","      <th>建ぺい率（％）_min</th>\n","      <th>建ぺい率（％）_max</th>\n","      <th>容積率（％）_count</th>\n","      <th>容積率（％）_mean</th>\n","      <th>容積率（％）_min</th>\n","      <th>容積率（％）_max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13319067</td>\n","      <td>15.0</td>\n","      <td>55</td>\n","      <td>60.0</td>\n","      <td>200.0</td>\n","      <td>7.079181</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>10</td>\n","      <td>260</td>\n","      <td>12166</td>\n","      <td>67.511918</td>\n","      <td>40.0</td>\n","      <td>80.0</td>\n","      <td>12166</td>\n","      <td>302.646720</td>\n","      <td>80.0</td>\n","      <td>800.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13018669</td>\n","      <td>NaN</td>\n","      <td>60</td>\n","      <td>80.0</td>\n","      <td>700.0</td>\n","      <td>7.568202</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>10</td>\n","      <td>2000</td>\n","      <td>11234</td>\n","      <td>76.704647</td>\n","      <td>60.0</td>\n","      <td>80.0</td>\n","      <td>11234</td>\n","      <td>539.033292</td>\n","      <td>100.0</td>\n","      <td>900.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>14103370</td>\n","      <td>NaN</td>\n","      <td>75</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7.380211</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>15</td>\n","      <td>1100</td>\n","      <td>4060</td>\n","      <td>60.327586</td>\n","      <td>40.0</td>\n","      <td>80.0</td>\n","      <td>4060</td>\n","      <td>195.876847</td>\n","      <td>80.0</td>\n","      <td>800.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14090903</td>\n","      <td>NaN</td>\n","      <td>40</td>\n","      <td>80.0</td>\n","      <td>800.0</td>\n","      <td>7.447158</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>10</td>\n","      <td>500</td>\n","      <td>6418</td>\n","      <td>64.727329</td>\n","      <td>40.0</td>\n","      <td>80.0</td>\n","      <td>6418</td>\n","      <td>278.272047</td>\n","      <td>80.0</td>\n","      <td>1200.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13317442</td>\n","      <td>NaN</td>\n","      <td>55</td>\n","      <td>60.0</td>\n","      <td>200.0</td>\n","      <td>7.278754</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>10</td>\n","      <td>260</td>\n","      <td>12166</td>\n","      <td>67.511918</td>\n","      <td>40.0</td>\n","      <td>80.0</td>\n","      <td>12166</td>\n","      <td>302.646720</td>\n","      <td>80.0</td>\n","      <td>800.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 39 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ceeca27-3dbc-4619-b2dc-c2bba595805c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ceeca27-3dbc-4619-b2dc-c2bba595805c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ceeca27-3dbc-4619-b2dc-c2bba595805c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-692e4060-4709-4368-ad9b-b3218bc189f1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-692e4060-4709-4368-ad9b-b3218bc189f1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-692e4060-4709-4368-ad9b-b3218bc189f1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"feat_df"}},"metadata":{},"execution_count":126}],"source":["feat_df.head()"]},{"cell_type":"code","execution_count":127,"metadata":{"id":"AgzukHPOnOIp","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"a0de7d07-a2f7-46a6-bfd8-d099064afb5f","executionInfo":{"status":"ok","timestamp":1727945846917,"user_tz":-540,"elapsed":7,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID                       0\n","最寄駅：距離（分）            23323\n","面積（㎡）                    0\n","建ぺい率（％）              27072\n","容積率（％）               27072\n","取引価格（総額）_log         19390\n","取引時点_enc                 0\n","都道府県名_te                 0\n","取引時点_何年前                 0\n","種類                       0\n","都道府県名                    0\n","市区町村名                    0\n","地区名                      0\n","最寄駅：名称                   0\n","間取り                      0\n","建築年                      0\n","建物の構造                    0\n","用途                       0\n","今後の利用目的                  0\n","都市計画                     0\n","改装                       0\n","取引の事情等                   0\n","面積（㎡）容積率（％）_combi    27072\n","最寄駅：距離（分）_count          0\n","最寄駅：距離（分）_mean         285\n","最寄駅：距離（分）_min          285\n","最寄駅：距離（分）_max          285\n","面積（㎡）_count              0\n","面積（㎡）_mean               0\n","面積（㎡）_min                0\n","面積（㎡）_max                0\n","建ぺい率（％）_count            0\n","建ぺい率（％）_mean             8\n","建ぺい率（％）_min              8\n","建ぺい率（％）_max              8\n","容積率（％）_count             0\n","容積率（％）_mean              8\n","容積率（％）_min               8\n","容積率（％）_max               8\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）</th>\n","      <td>23323</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）</th>\n","      <td>27072</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）</th>\n","      <td>27072</td>\n","    </tr>\n","    <tr>\n","      <th>取引価格（総額）_log</th>\n","      <td>19390</td>\n","    </tr>\n","    <tr>\n","      <th>取引時点_enc</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>都道府県名_te</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>取引時点_何年前</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>種類</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>都道府県名</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>市区町村名</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>地区名</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：名称</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>間取り</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建築年</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建物の構造</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>用途</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>今後の利用目的</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>都市計画</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>改装</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>取引の事情等</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）容積率（％）_combi</th>\n","      <td>27072</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）_mean</th>\n","      <td>285</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）_min</th>\n","      <td>285</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）_max</th>\n","      <td>285</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）_min</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）_max</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）_mean</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）_min</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）_max</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）_mean</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）_min</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）_max</th>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":127}],"source":["feat_df.isnull().sum()"]},{"cell_type":"markdown","metadata":{"id":"gxbamqpbpRgh"},"source":["モデル構築"]},{"cell_type":"code","execution_count":128,"metadata":{"id":"x1_DXPEzXX8v","colab":{"base_uri":"https://localhost:8080/"},"outputId":"22ed2a95-470d-4c38-eee9-2052e007ea81","executionInfo":{"status":"ok","timestamp":1727945846917,"user_tz":-540,"elapsed":7,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['ID', '最寄駅：距離（分）', '面積（㎡）', '建ぺい率（％）', '容積率（％）', '取引価格（総額）_log',\n","       '取引時点_enc', '都道府県名_te', '取引時点_何年前', '種類', '都道府県名', '市区町村名', '地区名',\n","       '最寄駅：名称', '間取り', '建築年', '建物の構造', '用途', '今後の利用目的', '都市計画', '改装',\n","       '取引の事情等', '面積（㎡）容積率（％）_combi', '最寄駅：距離（分）_count', '最寄駅：距離（分）_mean',\n","       '最寄駅：距離（分）_min', '最寄駅：距離（分）_max', '面積（㎡）_count', '面積（㎡）_mean',\n","       '面積（㎡）_min', '面積（㎡）_max', '建ぺい率（％）_count', '建ぺい率（％）_mean',\n","       '建ぺい率（％）_min', '建ぺい率（％）_max', '容積率（％）_count', '容積率（％）_mean',\n","       '容積率（％）_min', '容積率（％）_max'],\n","      dtype='object')"]},"metadata":{},"execution_count":128}],"source":["feat_df.columns"]},{"cell_type":"code","execution_count":129,"metadata":{"id":"ivwB08IrpRgh","colab":{"base_uri":"https://localhost:8080/"},"outputId":"cc1168a0-468a-4c44-9062-c1fb2fc33383","executionInfo":{"status":"ok","timestamp":1727945846917,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["(820591, 39) (26598, 39) (19390, 39)\n"]}],"source":["train_df = feat_df.iloc[:val_min_idx, :]\n","val_df = feat_df.iloc[val_min_idx:test_min_idx, :]\n","test_df = feat_df.iloc[test_min_idx:, :]\n","print(train_df.shape, val_df.shape, test_df.shape)"]},{"cell_type":"code","execution_count":130,"metadata":{"id":"QAQjmbAypRgi","executionInfo":{"status":"ok","timestamp":1727945846917,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["feat_cols = [col for col in train_df.columns if col not in rm_cols+[ID, TARGET]]"]},{"cell_type":"code","execution_count":131,"metadata":{"id":"7j7QCTotpRgi","colab":{"base_uri":"https://localhost:8080/"},"outputId":"9cd361f7-9058-48c1-ece0-f2fa315c1d62","executionInfo":{"status":"ok","timestamp":1727945846917,"user_tz":-540,"elapsed":4,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['種類',\n"," '都道府県名',\n"," '市区町村名',\n"," '地区名',\n"," '最寄駅：名称',\n"," '間取り',\n"," '建築年',\n"," '建物の構造',\n"," '用途',\n"," '今後の利用目的',\n"," '都市計画',\n"," '改装',\n"," '取引の事情等',\n"," '取引時点_enc']"]},"metadata":{},"execution_count":131}],"source":["cat_cols = list(le_df.columns) + ['取引時点_enc']\n","cat_cols"]},{"cell_type":"code","execution_count":132,"metadata":{"id":"7Ro9pHCkW9yq","colab":{"base_uri":"https://localhost:8080/"},"outputId":"c6fe2867-72d5-4728-bd5e-8b2fee480ab9","executionInfo":{"status":"ok","timestamp":1727945846917,"user_tz":-540,"elapsed":4,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['ID', '最寄駅：距離（分）', '面積（㎡）', '建ぺい率（％）', '容積率（％）', '取引価格（総額）_log',\n","       '取引時点_enc', '都道府県名_te', '取引時点_何年前', '種類', '都道府県名', '市区町村名', '地区名',\n","       '最寄駅：名称', '間取り', '建築年', '建物の構造', '用途', '今後の利用目的', '都市計画', '改装',\n","       '取引の事情等', '面積（㎡）容積率（％）_combi', '最寄駅：距離（分）_count', '最寄駅：距離（分）_mean',\n","       '最寄駅：距離（分）_min', '最寄駅：距離（分）_max', '面積（㎡）_count', '面積（㎡）_mean',\n","       '面積（㎡）_min', '面積（㎡）_max', '建ぺい率（％）_count', '建ぺい率（％）_mean',\n","       '建ぺい率（％）_min', '建ぺい率（％）_max', '容積率（％）_count', '容積率（％）_mean',\n","       '容積率（％）_min', '容積率（％）_max'],\n","      dtype='object')"]},"metadata":{},"execution_count":132}],"source":["train_df.columns"]},{"cell_type":"code","execution_count":133,"metadata":{"id":"IRMpya2wpRgi","executionInfo":{"status":"ok","timestamp":1727945847249,"user_tz":-540,"elapsed":335,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["train_x = train_df[feat_cols]\n","train_y = train_df[TARGET]\n","val_x = val_df[feat_cols]\n","val_y = val_df[TARGET]\n","test_x = test_df[feat_cols]\n","test_y = test_df[TARGET]"]},{"cell_type":"code","execution_count":134,"metadata":{"id":"Sa3Xl76mjazF","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"639069b9-f849-49a7-c457-925076f1be8d","executionInfo":{"status":"ok","timestamp":1727945847249,"user_tz":-540,"elapsed":2,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["最寄駅：距離（分）            23271\n","面積（㎡）                    0\n","建ぺい率（％）              26209\n","容積率（％）               26209\n","取引時点_enc                 0\n","都道府県名_te                 0\n","取引時点_何年前                 0\n","種類                       0\n","都道府県名                    0\n","市区町村名                    0\n","地区名                      0\n","最寄駅：名称                   0\n","間取り                      0\n","建築年                      0\n","建物の構造                    0\n","用途                       0\n","今後の利用目的                  0\n","都市計画                     0\n","改装                       0\n","取引の事情等                   0\n","面積（㎡）容積率（％）_combi    26209\n","最寄駅：距離（分）_count          0\n","最寄駅：距離（分）_mean         270\n","最寄駅：距離（分）_min          270\n","最寄駅：距離（分）_max          270\n","面積（㎡）_count              0\n","面積（㎡）_mean               0\n","面積（㎡）_min                0\n","面積（㎡）_max                0\n","建ぺい率（％）_count            0\n","建ぺい率（％）_mean             8\n","建ぺい率（％）_min              8\n","建ぺい率（％）_max              8\n","容積率（％）_count             0\n","容積率（％）_mean              8\n","容積率（％）_min               8\n","容積率（％）_max               8\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>最寄駅：距離（分）</th>\n","      <td>23271</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）</th>\n","      <td>26209</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）</th>\n","      <td>26209</td>\n","    </tr>\n","    <tr>\n","      <th>取引時点_enc</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>都道府県名_te</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>取引時点_何年前</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>種類</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>都道府県名</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>市区町村名</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>地区名</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：名称</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>間取り</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建築年</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建物の構造</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>用途</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>今後の利用目的</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>都市計画</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>改装</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>取引の事情等</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）容積率（％）_combi</th>\n","      <td>26209</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）_mean</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）_min</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>最寄駅：距離（分）_max</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）_min</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>面積（㎡）_max</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）_mean</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）_min</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>建ぺい率（％）_max</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）_mean</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）_min</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>容積率（％）_max</th>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":134}],"source":["train_x.isnull().sum()"]},{"cell_type":"code","execution_count":135,"metadata":{"id":"4Y5EH9v3pRgi","colab":{"base_uri":"https://localhost:8080/"},"outputId":"f2fca776-d0f2-4bd9-8f96-5dfd4e2dc98e","executionInfo":{"status":"ok","timestamp":1727945995778,"user_tz":-540,"elapsed":148530,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/lightgbm/engine.py:186: LGBMDeprecationWarning: Argument 'categorical_feature' to train() is deprecated and will be removed in a future release. Set 'categorical_feature' when calling lightgbm.Dataset() instead. See https://github.com/microsoft/LightGBM/issues/6435.\n","  _emit_dataset_kwarg_warning(\"train\", \"categorical_feature\")\n","/usr/local/lib/python3.10/dist-packages/lightgbm/engine.py:204: UserWarning: Found `num_boost_round` in params. Will use it instead of argument\n","  _log_warning(f\"Found `{alias}` in params. Will use it instead of argument\")\n"]},{"output_type":"stream","name":"stdout","text":["[100]\ttrain's l1: 0.113078\tvalid's l1: 0.144565\n","[200]\ttrain's l1: 0.10795\tvalid's l1: 0.140545\n","[300]\ttrain's l1: 0.104376\tvalid's l1: 0.138255\n","[400]\ttrain's l1: 0.101978\tvalid's l1: 0.136976\n","[500]\ttrain's l1: 0.100112\tvalid's l1: 0.13627\n","[600]\ttrain's l1: 0.0986564\tvalid's l1: 0.135684\n","[700]\ttrain's l1: 0.0973822\tvalid's l1: 0.135202\n","[800]\ttrain's l1: 0.0963165\tvalid's l1: 0.134711\n","[900]\ttrain's l1: 0.0953362\tvalid's l1: 0.134632\n","score: 0.1346\n"]}],"source":["SEED = 0\n","\n","params = {\n","    'objective': 'regression',\n","    'metric': 'mae', #コンペの評価関数を設定\n","    'num_leaves': 42,\n","    'max_depth': 7,\n","    \"feature_fraction\": 0.8,\n","    'subsample_freq': 1,\n","    \"bagging_fraction\": 0.95,\n","    'min_data_in_leaf': 2,\n","    'learning_rate': 0.1,\n","    \"boosting\": \"gbdt\",\n","    \"lambda_l1\": 0.1,\n","    \"lambda_l2\": 10,\n","    \"verbosity\": -1,\n","    \"random_state\": 42,\n","    \"num_boost_round\": 50000, #学習イテレーション数\n","    \"early_stopping_rounds\": 100\n","}\n","\n","train_data = lgb.Dataset(train_x, label=train_y)\n","val_data = lgb.Dataset(val_x, label=val_y)\n","\n","model = lgb.train(\n","    params,\n","    train_data,\n","    categorical_feature = cat_cols,\n","    valid_names = ['train', 'valid'],\n","    valid_sets =[train_data, val_data],\n","    callbacks=[\n","        lgb.log_evaluation(100),\n","    ]\n",")\n","\n","val_pred = model.predict(val_x, num_iteration=model.best_iteration)\n","score = mean_absolute_error(val_y, val_pred)\n","\n","pred_df = pd.DataFrame(sorted(zip(val_x.index, val_pred, val_y)), columns=['index', 'predict', 'actual'])\n","\n","feature_imp = pd.DataFrame(sorted(zip(model.feature_importance(), train_x.columns)), columns=['importance', 'feature'])\n","\n","print(f'score: {score:.4f}')"]},{"cell_type":"code","execution_count":136,"metadata":{"id":"kTPeagN2pRgi","colab":{"base_uri":"https://localhost:8080/","height":685},"outputId":"1e7f87d2-9113-4e5f-9d07-595bedf0da24","executionInfo":{"status":"ok","timestamp":1727945997533,"user_tz":-540,"elapsed":1773,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["lgb.plot_importance(model, figsize=(12,8), max_num_features=50, importance_type='gain')\n","plt.tight_layout()\n","plt.savefig(BASE_PATH + 'output/feature_importance.png')\n","plt.show()\n","plt.close()"]},{"cell_type":"markdown","metadata":{"id":"b-jqtQOPXIg4"},"source":["## 推論"]},{"cell_type":"code","execution_count":137,"metadata":{"id":"fGbXh6MLpRgj","executionInfo":{"status":"ok","timestamp":1727945999472,"user_tz":-540,"elapsed":1943,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["test_pred = model.predict(test_x, num_iteration=model.best_iteration)"]},{"cell_type":"code","execution_count":138,"metadata":{"id":"NLU97x851i2R","colab":{"base_uri":"https://localhost:8080/"},"outputId":"ca96af29-db63-4591-c595-c65400b06dd0","executionInfo":{"status":"ok","timestamp":1727945999473,"user_tz":-540,"elapsed":9,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-138-c7d24f824a6c>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test_df[TARGET] = test_pred\n"]}],"source":["test_df[TARGET] = test_pred"]},{"cell_type":"code","execution_count":139,"metadata":{"id":"1Uda2xkDpRgj","executionInfo":{"status":"ok","timestamp":1727945999473,"user_tz":-540,"elapsed":7,"user":{"displayName":"Yuki Takayama","userId":"05605865657736895237"}}},"outputs":[],"source":["sub_df = pd.merge(sub_df[['ID']], test_df[['ID', TARGET]], on='ID')\n","sub_df.to_csv(BASE_PATH + 'output/test_submission.csv', index=False)"]}],"metadata":{"colab":{"provenance":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.4"},"orig_nbformat":2},"nbformat":4,"nbformat_minor":0}